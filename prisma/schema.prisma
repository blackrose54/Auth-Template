datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                           String                 @id @default(cuid())
  name                         String?
  password                     String?
  email                        String                 @unique
  emailVerified                DateTime?
  image                        String?
  accounts                     Account[]
  twoFactorEnabled             Boolean                @default(false)
  twoFactorConfirmation        TwoFactorConfirmation?
  createdAt                    DateTime               @default(now())
  updatedAt                    DateTime               @updatedAt
  twoFactorAuthenticationEmail String?
  twoFactorAuthenticationToken String?
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  id      String   @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@id([email, token])
}

model PasswordResetToken {
  id      String   @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@id([email, token])
}

model TwoFactorToken {
  id      String   @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@id([email, token])
}

model TwoFactorConfirmation {
  id     String @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}
